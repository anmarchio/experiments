"""
This script will iteratively run all hdev functions
in this folder containing the pipelines generated by CGP optimization.

All hdev files have been manually created and edited from digraph code.
"""
import os

import numpy as np

from param_tuning.hdev_manual.AirCarbon2_t_8_jpg_mean import AirCarbon2_t_8_jpg_training_source_path, \
    AirCarbon2_t_8_jpg_mean_pipeline, AirCarbon2_t_8_jpg_mean_pipeline_bounds, \
    AirCarbon2_t_8_jpg_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_bright_mean import AirCarbon3_80_jpg_bright_training_source_path, \
    get_AirCarbon3_80_jpg_bright_mean_pipeline, AirCarbon3_80_jpg_bright_mean_pipeline_bounds, \
    AirCarbon3_80_jpg_bright_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_dark_1_mean import AirCarbon3_80_jpg_dark_1_training_source_path, \
    get_AirCarbon3_80_jpg_dark_1_mean_pipeline, AirCarbon3_80_jpg_dark_1_mean_pipeline_bounds, \
    AirCarbon3_80_jpg_dark_1_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_dark_2_mean import AirCarbon3_80_jpg_dark_2_training_source_path, \
    AirCarbon3_80_jpg_dark_2_mean_pipeline_bounds, get_AirCarbon3_80_jpg_dark_2_mean_pipeline, \
    AirCarbon3_80_jpg_dark_2_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_dark_3_mean import AirCarbon3_80_jpg_dark_3_training_source_path, \
    AirCarbon3_80_jpg_dark_3_mean_pipeline_bounds, get_AirCarbon3_80_jpg_dark_3_mean_pipeline, \
    AirCarbon3_80_jpg_dark_3_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_dark_4_mean import AirCarbon3_80_jpg_dark_4_training_source_path, \
    get_AirCarbon3_80_jpg_dark_4_mean_pipeline, AirCarbon3_80_jpg_dark_4_mean_pipeline_bounds, \
    AirCarbon3_80_jpg_dark_4_mean_pipeline_initial_params
from param_tuning.hdev_manual.AirCarbon3_80_jpg_dark_5_mean import AirCarbon3_80_jpg_dark_5_training_source_path, \
    get_AirCarbon3_80_jpg_dark_5_mean_pipeline, AirCarbon3_80_jpg_dark_5_mean_pipeline_bounds, \
    AirCarbon3_80_jpg_dark_5_mean_pipeline_initial_params
from param_tuning.hdev_manual.FabricDefectsAITEX_mean import get_FabricDefectsAITEX_mean_pipeline, \
    FabricDefectsAITEX_mean_pipeline_bounds, FabricDefectsAITEX_training_source_path, \
    FabricDefectsAITEX_mean_pipeline_initial_params
from settings import PARAM_TUNING_HDEV_MANUAL

MANUAL_HDEV_PIPELINES_MEAN = [
    #"AirCarbon2_t_8.jpg_mean_pipeline",
    #'AirCarbon3_80.jpg_bright_mean_pipeline',
    #"AirCarbon3_80.jpg_dark_1_mean_pipeline",
    "AirCarbon3_80.jpg_dark_2_mean_pipeline",
    #"AirCarbon3_80.jpg_dark_3_mean_pipeline",
    #"AirCarbon3_80.jpg_dark_4_mean_pipeline",
    #"AirCarbon3_80.jpg_dark_5_mean_pipeline",
    #"CF_ReferenceSet_mean_pipeline",
    #"CF_ReferenceSet_Small_Dark_mean_pipeline",
    #"CF_ReferenceSet_Small_Light_mean_pipeline",
    #'FabricDefectsAITEX_mean_pipeline'
]


def get_manual_hdev_pipeline(pipeline_name: str, params: np.array):
    pipeline_function = pipelines.get(pipeline_name)

    if pipeline_function:
        # Call the specific function with the 'params' argument
        return pipeline_function(params)
    else:
        return None


def get_manual_hdev_pipeline_bounds(pipeline_name: str) -> []:
    return bounds.get(pipeline_name, None)


def get_initial_state_by_pipeline_name(pipeline_name: str) -> []:
    return initial_params.get(pipeline_name, None)


def get_manual_hdev_pipeline_path(pipeline_name: str):
    for name in MANUAL_HDEV_PIPELINES_MEAN:
        if name == pipeline_name:
            return os.path.join(PARAM_TUNING_HDEV_MANUAL, name)
    return None


def get_manual_hdev_pipeline_training_source_path(pipeline_name: str):
    if pipeline_name == "AirCarbon2_t_8.jpg_mean_pipeline":
        return AirCarbon2_t_8_jpg_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_bright_mean_pipeline":
        return AirCarbon3_80_jpg_bright_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_1_mean_pipeline":
        return AirCarbon3_80_jpg_dark_1_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_2_mean_pipeline":
        return AirCarbon3_80_jpg_dark_2_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_2_mean_pipeline":
        return AirCarbon3_80_jpg_dark_3_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_3_mean_pipeline":
        return AirCarbon3_80_jpg_dark_3_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_4_mean_pipeline":
        return AirCarbon3_80_jpg_dark_4_training_source_path
    elif pipeline_name == "AirCarbon3_80.jpg_dark_5_mean_pipeline":
        return AirCarbon3_80_jpg_dark_5_training_source_path
    #elif pipeline_name == "CF_ReferenceSet_mean_pipeline":
    #    return CF_ReferenceSet_training_source_path
    #elif pipeline_name == "CF_ReferenceSet_Small_Dark_mean_pipeline":
    #    return CF_ReferenceSet_Small_Dark_training_source_path
    #elif pipeline_name == "CF_ReferenceSet_Small_Light_mean_pipeline":
    #    return CF_ReferenceSet_Small_Light_training_source_path
    elif pipeline_name == "FabricDefectsAITEX_mean_pipeline":
        return FabricDefectsAITEX_training_source_path
    # None
    return None


"""
=============================
DICTS for pipelines, bounds, source_paths
=============================
"""

pipelines = {
    "AirCarbon2_t_8.jpg_mean_pipeline": AirCarbon2_t_8_jpg_mean_pipeline,
    "AirCarbon3_80.jpg_bright_mean_pipeline": get_AirCarbon3_80_jpg_bright_mean_pipeline,
    "AirCarbon3_80.jpg_dark_1_mean_pipeline": get_AirCarbon3_80_jpg_dark_1_mean_pipeline,
    "AirCarbon3_80.jpg_dark_2_mean_pipeline": get_AirCarbon3_80_jpg_dark_2_mean_pipeline,
    "AirCarbon3_80.jpg_dark_3_mean_pipeline": get_AirCarbon3_80_jpg_dark_3_mean_pipeline,
    "AirCarbon3_80.jpg_dark_4_mean_pipeline": get_AirCarbon3_80_jpg_dark_4_mean_pipeline,
    "AirCarbon3_80.jpg_dark_5_mean_pipeline": get_AirCarbon3_80_jpg_dark_5_mean_pipeline,
    "FabricDefectsAITEX_mean_pipeline": get_FabricDefectsAITEX_mean_pipeline
    # Add other pipelines here
}


bounds = {
    "AirCarbon2_t_8.jpg_mean_pipeline": AirCarbon2_t_8_jpg_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_bright_mean_pipeline": AirCarbon3_80_jpg_bright_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_dark_1_mean_pipeline": AirCarbon3_80_jpg_dark_1_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_dark_2_mean_pipeline": AirCarbon3_80_jpg_dark_2_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_dark_3_mean_pipeline": AirCarbon3_80_jpg_dark_3_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_dark_4_mean_pipeline": AirCarbon3_80_jpg_dark_4_mean_pipeline_bounds,
    "AirCarbon3_80.jpg_dark_5_mean_pipeline": AirCarbon3_80_jpg_dark_5_mean_pipeline_bounds,
    "FabricDefectsAITEX_mean_pipeline": FabricDefectsAITEX_mean_pipeline_bounds
    # Add other bounds here
}

initial_params = {
    "AirCarbon2_t_8.jpg_mean_pipeline": AirCarbon2_t_8_jpg_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_bright_mean_pipeline": AirCarbon3_80_jpg_bright_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_dark_1_mean_pipeline": AirCarbon3_80_jpg_dark_1_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_dark_2_mean_pipeline": AirCarbon3_80_jpg_dark_2_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_dark_3_mean_pipeline": AirCarbon3_80_jpg_dark_3_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_dark_4_mean_pipeline": AirCarbon3_80_jpg_dark_4_mean_pipeline_initial_params,
    "AirCarbon3_80.jpg_dark_5_mean_pipeline": AirCarbon3_80_jpg_dark_5_mean_pipeline_initial_params,
    "FabricDefectsAITEX_mean_pipeline": FabricDefectsAITEX_mean_pipeline_initial_params
    # Add initial params
}