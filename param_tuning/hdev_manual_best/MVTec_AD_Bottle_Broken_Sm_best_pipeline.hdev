<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.1" halcon_version="13.0">
<procedure name="main">
<interface/>
<body>
<l>dataset_name := 'MVTec_AD_Bottle_Broken_Sm_best_pipeline'</l>
<l>source_path := 'D:/evias_expmts/MVTecAnomalyDetection/bottle_broken_small_train/images'</l>
<l>output_path := dataset_name + '/'</l>
<c></c>
<l>list_image_files(source_path, 'default', [], ImageFiles)</l>
<c></c>
<l>for Index := 0 to |ImageFiles| - 1 by 1</l>
<l>    file_exists(output_path, dir_exists)</l>
<l>    if(dir_exists == 0)</l>
<l>        make_dir(output_path)</l>
<l>    endif</l>
<l>    out_img_path := output_path + Index + '.png'</l>
<l>    file_exists(out_img_path, exists)</l>
<l>    if(exists)</l>
<l>        delete_file(out_img_path)</l>
<l>    endif</l>
<l>    read_image(Image, ImageFiles[Index])</l>
<l>    get_image_size(Image, Width, Height)</l>
<c>    * --------------</c>
<c>    * CGP Code Block</c>
<c>    * --------------</c>
<l>    try</l>
<c>        * Parameters</c>
<l>        MinGray := 21</l>
<l>        MaxGray := 255</l>
<c>        </c>
<l>        FilterType := 'y_binomial'</l>
<l>        MaskSize := 7</l>
<c>        </c>
<l>        Iterations := 12</l>
<l>        A := 7.0</l>
<l>        B := 3.0</l>
<c>        </c>
<c>        * Pipeline</c>
<c>        </c>
<c>        * CropSmallestRectangle</c>
<l>        threshold(Image, RegionRect, MinGray, MaxGray)</l>
<l>        smallest_rectangle1(RegionRect, Row1, Column1, Row2, Column2)</l>
<l>        crop_rectangle1(Image, ImageCrop, Row1, Column1, Row2, Column2)</l>
<c>        </c>
<l>        sobel_amp(ImageCrop, ImageAmp, FilterType, MaskSize)</l>
<c>        </c>
<l>        zero_crossing(ImageAmp, RegionZero)</l>
<c>        </c>
<c>        * StructElementType Ellipse"</c>
<c>        * using A, B and C as shape_params"</c>
<l>        tuple_max2(A, B, max_rad)</l>
<l>        longer := A</l>
<l>        shorter := B</l>
<l>        if (shorter &gt; longer)</l>
<l>            tmp := shorter</l>
<l>            shorter := longer</l>
<l>            longer := tmp</l>
<l>        endif</l>
<l>        phi := 0.0</l>
<l>        tuple_ceil(max_rad + 1, max_rad_ceil)</l>
<l>        gen_ellipse(SE, max_rad_ceil, max_rad_ceil, phi, longer, shorter)</l>
<c>        * Apply StructElement Ellipse to Dilation1</c>
<l>        dilation1(RegionZero, SE, RegionDilation, Iterations)</l>
<c>        </c>
<l>        union1(RegionDilation, Region)</l>
<l>    catch (Exception)</l>
<l>        gen_empty_region(Region)</l>
<l>    endtry</l>
<c>    * --------------</c>
<c>    * END Code Block</c>
<c>    * --------------</c>
<l>    gen_image_const(ImageResult, 'byte', Width, Height)</l>
<l>    paint_region(Region, ImageResult, ImageResult, 255, 'fill')</l>
<l>    dev_display(Region)</l>
<l>    *write_image(ImageResult, 'png', 0, out_img_path)</l>
<l>endfor</l>
<l>*exit()</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
